name: Bug Bounty Automation

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:
    inputs:
      target:
        description: 'Target Domain'
        required: true
        default: 'example.com'
      scan_type:
        description: 'Scan Type'
        required: true
        default: 'full'
        type: choice
        options:
          - full
          - quick
          - vuln-only

env:
  TELEGRAM_TOKEN: \${{ secrets.TELEGRAM_TOKEN }}
  TELEGRAM_CHAT_ID: \${{ secrets.TELEGRAM_CHAT_ID }}

jobs:
  recon:
    name: Reconnaissance
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      
      - name: Create Results Directory
        run: mkdir -p results
      
      - name: Install Tools
        run: |
          go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
          go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest
          go install -v github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest
          echo "\$HOME/go/bin" >> \$GITHUB_PATH
      
      - name: Update Nuclei Templates
        run: nuclei -update-templates -ut
      
      - name: Subdomain Discovery
        run: |
          TARGET="\${{ github.event.inputs.target }}"
          echo "Scanning: \$TARGET"
          subfinder -d "\$TARGET" -all -o results/subdomains.txt || echo "No subdomains found"
          if [ -f results/subdomains.txt ]; then
            COUNT=\$(wc -l < results/subdomains.txt)
            echo "Found \$COUNT subdomains"
          else
            echo "0" > results/subdomains.txt
          fi
      
      - name: Live Host Detection
        run: |
          if [ -s results/subdomains.txt ]; then
            cat results/subdomains.txt | httpx -silent -o results/live_hosts.txt || echo "No live hosts"
            if [ -f results/live_hosts.txt ]; then
              COUNT=\$(wc -l < results/live_hosts.txt)
              echo "Found \$COUNT live hosts"
            else
              echo "0" > results/live_hosts.txt
            fi
          else
            echo "No subdomains to check"
            echo "0" > results/live_hosts.txt
          fi
      
      - name: Vulnerability Scan
        run: |
          if [ -s results/live_hosts.txt ] && [ "\$(cat results/live_hosts.txt)" != "0" ]; then
            cat results/live_hosts.txt | nuclei -silent -severity critical,high -o results/vulns.txt || echo "No vulnerabilities found"
          else
            echo "No live hosts to scan"
            touch results/vulns.txt
          fi
      
      - name: Generate Report
        run: |
          echo "# Bug Bounty Scan Report" > results/report.txt
          echo "" >> results/report.txt
          echo "Target: \${{ github.event.inputs.target }}" >> results/report.txt
          echo "Date: \$(date)" >> results/report.txt
          echo "" >> results/report.txt
          echo "Subdomains: \$(wc -l < results/subdomains.txt 2>/dev/null || echo 0)" >> results/report.txt
          echo "Live Hosts: \$(wc -l < results/live_hosts.txt 2>/dev/null || echo 0)" >> results/report.txt
          echo "Vulnerabilities: \$(wc -l < results/vulns.txt 2>/dev/null || echo 0)" >> results/report.txt
          echo "" >> results/report.txt
          if [ -s results/vulns.txt ]; then
            echo "Critical Findings:" >> results/report.txt
            head -n 5 results/vulns.txt >> results/report.txt
          fi
      
      - name: Send Telegram Notification
        if: env.TELEGRAM_TOKEN != ''
        run: |
          REPORT=\$(cat results/report.txt)
          curl -s -X POST "https://api.telegram.org/bot\${TELEGRAM_TOKEN}/sendMessage" \\
            -d "chat_id=\${TELEGRAM_CHAT_ID}" \\
            -d "text=\${REPORT}" \\
            -d "parse_mode=HTML" || echo "Failed to send notification"
      
      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: scan-results
          path: results/
          retention-days: 30
      
      - name: Display Summary
        run: cat results/report.txt`
